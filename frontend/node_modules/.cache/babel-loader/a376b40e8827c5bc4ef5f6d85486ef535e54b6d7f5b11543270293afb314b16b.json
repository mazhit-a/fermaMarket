{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password-page\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"response-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Reset Your Password\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"])),\n    class: \"reset-password-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"New password\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-button\"\n  }, \"Reset Password\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","resetPassword","$event","$data","password","type","placeholder","required","confirmPassword","message","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["/Users/macbook/Downloads/my-vue-app/src/components/ResetPassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"reset-password-page\">\r\n    <h2>Reset Your Password</h2>\r\n    <form @submit.prevent=\"resetPassword\" class=\"reset-password-form\">\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"New password\" required class=\"input-field\"/>\r\n      <input v-model=\"confirmPassword\" type=\"password\" placeholder=\"Confirm password\" required class=\"input-field\"/>\r\n      <button type=\"submit\" class=\"submit-button\">Reset Password</button>\r\n    </form>\r\n    <p v-if=\"message\" class=\"response-message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      password: '',\r\n      confirmPassword: '',\r\n      message: '',\r\n    };\r\n  },\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    return { route, router };\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      if (this.password !== this.confirmPassword) {\r\n        this.message = 'Passwords do not match';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const token = this.route.params.token;\r\n        await axios.post(`http://localhost:3000/api/reset-password/${token}`, { password: this.password });\r\n        this.message = 'Password reset successfully!';\r\n        setTimeout(() => this.router.push({ name: 'Login' }), 2000);\r\n      } catch (error) {\r\n        this.message = error.response?.data?.message || 'Password reset failed.';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password-page {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  text-align: center;\r\n  font-family: Arial, sans-serif;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.reset-password-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.input-field {\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.submit-button {\r\n  padding: 10px 15px;\r\n  margin-top: 15px;\r\n  font-size: 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.response-message {\r\n  margin-top: 20px;\r\n  color: #f44336;\r\n  font-weight: bold;\r\n}\r\n\r\n.response-message.success {\r\n  color: #4CAF50;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EADlCC,GAAA;EAQsBD,KAAK,EAAC;;;uBAP1BE,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAA4B,YAAxB,qBAAmB,sBACvBA,mBAAA,CAIO;IAJAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAER,KAAK,EAAC;sBAC1CI,mBAAA,CAAmG;IAJzG,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIsBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,cAAc;IAACC,QAAQ,EAAR,EAAQ;IAAChB,KAAK,EAAC;iDAApEY,KAAA,CAAAC,QAAQ,E,mBACxBT,mBAAA,CAA8G;IALpH,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKsBC,KAAA,CAAAK,eAAe,GAAAN,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,kBAAkB;IAACC,QAAQ,EAAR,EAAQ;IAAChB,KAAK,EAAC;iDAA/EY,KAAA,CAAAK,eAAe,E,6BAC/Bb,mBAAA,CAAmE;IAA3DU,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC;KAAgB,gBAAc,qB,4BAEnDY,KAAA,CAAAM,OAAO,I,cAAhBhB,mBAAA,CAA4D,KAA5DiB,UAA4D,EAAAC,gBAAA,CAAdR,KAAA,CAAAM,OAAO,oBARzDG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}