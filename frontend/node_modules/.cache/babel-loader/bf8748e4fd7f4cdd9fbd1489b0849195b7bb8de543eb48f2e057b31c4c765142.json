{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-panel\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-farmers\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"button-group\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Pending Farmers\", -1 /* HOISTED */)), $data.farmers.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"No pending farmers to approve or reject.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.farmers, farmer => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: farmer.farmerid,\n      class: \"farmer-card\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(farmer.farmer_name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(farmer.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Phone:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(farmer.phone_number), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Location:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(farmer.location), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n      onClick: $event => $options.approveFarmer(farmer.farmerid),\n      class: \"approve-button\"\n    }, \"Approve\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.rejectFarmer(farmer.farmerid),\n      class: \"reject-button\"\n    }, \"Reject\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","farmers","length","_hoisted_2","_cache","_hoisted_3","_Fragment","_renderList","farmer","farmerid","_toDisplayString","farmer_name","_createTextVNode","email","phone_number","location","_hoisted_4","onClick","$event","$options","approveFarmer","_hoisted_5","rejectFarmer","_hoisted_6"],"sources":["/Users/macbook/Desktop/fermaMarket/frontend/src/components/AdminPanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-panel\">\r\n    <h2>Pending Farmers</h2>\r\n    <div v-if=\"farmers.length === 0\" class=\"no-farmers\">\r\n      <p>No pending farmers to approve or reject.</p>\r\n    </div>\r\n    <div v-else>\r\n      <div v-for=\"farmer in farmers\" :key=\"farmer.farmerid\" class=\"farmer-card\">\r\n        <h3>{{ farmer.farmer_name }}</h3>\r\n        <p><strong>Email:</strong> {{ farmer.email }}</p>\r\n        <p><strong>Phone:</strong> {{ farmer.phone_number }}</p>\r\n        <p><strong>Location:</strong> {{ farmer.location }}</p>\r\n        <div class=\"button-group\">\r\n          <button @click=\"approveFarmer(farmer.farmerid)\" class=\"approve-button\">Approve</button>\r\n          <button @click=\"rejectFarmer(farmer.farmerid)\" class=\"reject-button\">Reject</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      farmers: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchFarmers() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3003/api/pending-farmers', { withCredentials: true });\r\n        if (response.data.data) {\r\n          this.farmers = response.data.data;\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 403) {\r\n          alert('You must be logged in to access this page.');\r\n          this.$router.push({ name: 'Login' });\r\n        }\r\n        console.error('Error fetching farmers:', error);\r\n      }\r\n    },\r\n    async approveFarmer(farmerId) {\r\n      try {\r\n        const response = await axios.post('http://localhost:3003/api/approve-farmer', {farmerid: farmerId}, { withCredentials: true });\r\n        if (response.data && response.data.message === 'Farmer approved successfully') {\r\n          this.farmers = this.farmers.filter(farmer => farmer.farmerid !== farmerId);\r\n          alert('Farmer approved successfully!');\r\n        } else {\r\n          throw new Error('Unexpected response from server');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error approving farmer:', error.response ? error.response.data : error.message);\r\n        alert('Failed to approve farmer');\r\n      }\r\n    },\r\n    async rejectFarmer(farmerId) {\r\n      const reason = prompt('Please provide a reason for rejection:');\r\n      if (!reason) {\r\n        return;\r\n      }\r\n      try {\r\n        await axios.post('http://localhost:3003/api/reject-farmer', { farmerId, reason }, { withCredentials: true });\r\n        this.fetchFarmers();\r\n        alert('Farmer rejected successfully');\r\n      } catch (error) {\r\n        console.error('Error rejecting farmer:', error);\r\n        alert('Error rejecting farmer');\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchFarmers();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-panel {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n}\r\n\r\n.no-farmers {\r\n  text-align: center;\r\n  color: #888;\r\n}\r\n\r\n.farmer-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  margin: 12px 0;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.farmer-card h3 {\r\n  margin-top: 0;\r\n  color: #444;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\nbutton:hover {\r\n  opacity: 0.9;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.approve-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  margin-right: 8px;\r\n}\r\n\r\n.reject-button {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAD1BC,GAAA;EAGqCD,KAAK,EAAC;;;EAH3CC,GAAA;AAAA;;EAYaD,KAAK,EAAC;AAAc;mBAZjC;mBAAA;;uBACEE,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAwB,YAApB,iBAAe,sBACRC,KAAA,CAAAC,OAAO,CAACC,MAAM,U,cAAzBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJL,mBAAA,CAA+C,WAA5C,0CAAwC,oB,qBAE7CF,mBAAA,CAWM,OAjBVQ,UAAA,I,kBAOMR,mBAAA,CASMS,SAAA,QAhBZC,WAAA,CAO4BP,KAAA,CAAAC,OAAO,EAAjBO,MAAM;yBAAlBX,mBAAA,CASM;MAT0BD,GAAG,EAAEY,MAAM,CAACC,QAAQ;MAAEd,KAAK,EAAC;QAC1DI,mBAAA,CAAiC,YAAAW,gBAAA,CAA1BF,MAAM,CAACG,WAAW,kBACzBZ,mBAAA,CAAiD,Y,0BAA9CA,mBAAA,CAAuB,gBAAf,QAAM,sBATzBa,gBAAA,CASkC,GAAC,GAAAF,gBAAA,CAAGF,MAAM,CAACK,KAAK,iB,GAC1Cd,mBAAA,CAAwD,Y,0BAArDA,mBAAA,CAAuB,gBAAf,QAAM,sBAVzBa,gBAAA,CAUkC,GAAC,GAAAF,gBAAA,CAAGF,MAAM,CAACM,YAAY,iB,GACjDf,mBAAA,CAAuD,Y,0BAApDA,mBAAA,CAA0B,gBAAlB,WAAS,sBAX5Ba,gBAAA,CAWqC,GAAC,GAAAF,gBAAA,CAAGF,MAAM,CAACO,QAAQ,iB,GAChDhB,mBAAA,CAGM,OAHNiB,UAGM,GAFJjB,mBAAA,CAAuF;MAA9EkB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACZ,MAAM,CAACC,QAAQ;MAAGd,KAAK,EAAC;OAAiB,SAAO,iBAbxF0B,UAAA,GAcUtB,mBAAA,CAAoF;MAA3EkB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,YAAY,CAACd,MAAM,CAACC,QAAQ;MAAGd,KAAK,EAAC;OAAgB,QAAM,iBAdrF4B,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}